#include <TinyGPS++.h>
#include <Wire.h>
#include <Adafruit_MPU6050.h>
#include <Adafruit_Sensor.h>

HardwareSerial gsmSerial(2); // UART2 for GSM (GPIO4: RX, GPIO2: TX)
#define GPS_TX 1 // TXD (GPIO1)
#define GPS_RX 3 // RXD (GPIO3)

HardwareSerial neogps(0); // Use UART0 for GPS (default Serial UART)
TinyGPSPlus gps;
Adafruit_MPU6050 mpu;

const int pin = 34; // Trigger pin
int state = 0;

void setup() {
  Serial.begin(9600); // For Serial Monitor
  Serial.println("ESP32 serial initialized");

  // Initialize GPS module (UART0)
  neogps.begin(9600, SERIAL_8N1, GPS_RX, GPS_TX);
  gsmSerial.begin(9600, SERIAL_8N1, 4, 2);  // GSM on GPIO4 (RX), GPIO2 (TX)
  Serial.println("NeoGPS serial initialized");

  // Initialize MPU6050 (I2C)
  if (!mpu.begin()) {
    Serial.println("Failed to find MPU6050 chip");
    while (1) {
      delay(10);
    }
  }
  Serial.println("MPU6050 initialized");
  mpu.setAccelerometerRange(MPU6050_RANGE_8_G); // Set accelerometer range
  mpu.setFilterBandwidth(MPU6050_BAND_5_HZ);   // Set filter bandwidth

  pinMode(pin, INPUT); // Initialize trigger pin
  Serial.println("ESP32 GPS-GSM-MPU6050 Setup Complete");
}

void loop() {
  boolean newData = false;

  // Wait for GPS data
  for (unsigned long start = millis(); millis() - start < 2000;) {
    while (neogps.available()) {
      if (gps.encode(neogps.read())) {
        newData = true;
      }
    }
  }

  if (digitalRead(pin) == HIGH && state == 0) {
    sensors_event_t accel, gyro, temp;
    mpu.getEvent(&accel, &gyro, &temp); // Get accelerometer, gyroscope, and temperature data

    gsmSerial.print("\r");
    delay(1000);
    gsmSerial.print("AT+CMGF=1\r"); // Set SMS mode
    delay(1000);

    // Replace XXXXXXXXXX with a valid mobile number
    gsmSerial.print("AT+CMGS=\"+919730210455\"\r");
    delay(1000);

    // Send SOS message with GPS location and MPU6050 data
    gsmSerial.print("I am in Trouble. Help Me! https://www.google.com/maps?q=");
    gsmSerial.print(gps.location.lat(), 6);
    gsmSerial.print(",");
    gsmSerial.print(gps.location.lng(), 6);
    gsmSerial.print("\nAccelerometer Data: ");
    gsmSerial.print("X=");
    gsmSerial.print(accel.acceleration.x, 2);
    gsmSerial.print(", Y=");
    gsmSerial.print(accel.acceleration.y, 2);
    gsmSerial.print(", Z=");
    gsmSerial.print(accel.acceleration.z, 2);
    gsmSerial.print("\nGyroscope Data: ");
    gsmSerial.print("X=");
    gsmSerial.print(gyro.gyro.x, 2);
    gsmSerial.print(", Y=");
    gsmSerial.print(gyro.gyro.y, 2);
    gsmSerial.print(", Z=");
    gsmSerial.print(gyro.gyro.z, 2);
    delay(1000);

    gsmSerial.write(0x1A); // Send Ctrl+Z to end the SMS
    delay(1000);

    Serial.println("SOS message sent!");
    state = 1; // Avoid sending multiple messages
  }

  // Reset state if the pin goes LOW
  if (digitalRead(pin) == LOW) {
    state = 0;
    delay(1000);
  }
}
